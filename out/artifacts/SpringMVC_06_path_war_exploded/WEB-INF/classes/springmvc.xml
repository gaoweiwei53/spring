<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        https://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        https://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <context:component-scan base-package="org.example.controller"/>

    <!-- 声明springmvc视图解析器，帮助开发人员设置视图文件的路径 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 前缀：视图文件的路径 -->
        <property name="prefix" value="/WEB-INF/View/"/>
        <!-- 后缀：文件的扩展名-->
        <property name="suffix" value=".jsp"/>
    </bean>

    <!--第二种处理静态资源的方式(常用)
    加入后框架会创建ResourceHttpRequestHandler处理器对象来处理静态资源，不依赖tomcat
    mapping：访问资源的uri地址，使用通配符**
    location: 静态资源在项目的位置
    -->
<!--    <mvc:resources mapping="/images/**" location="/images/"/>-->
<!--    <mvc:resources mapping="/html/**" location="/html/"/>-->
<!--    <mvc:resources mapping="/js/**" location="/js/"/>-->

    <!--使用一条语句指定所有静态资源-->
    <mvc:resources mapping="/static/**" location="/static/"/>

    <!--mvc:resources和 RequestMapping有冲突 -->
    <mvc:annotation-driven/>
</beans>